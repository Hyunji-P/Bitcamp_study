[오전 수업]

▶ 10월 12일 모르는 내용 정리

1. 생성자가 상속 불가한 이유 
생성자는 객체가 생성되고 자바 시스템에서 자동으로 만들어지는 특수한 메소드
부모 생성자가 자동적으로 시스템에서 만들어지는 것을 자식 클래스가 접근할 수 없다고 이해할 것
생성자는 부모 따로 , 자식 따로 만들어지기 때문에 각각으로 봐야함 

2. 오버라이딩 할때 정보 은닉화?
수퍼 클래스(부모클래스)에서 display 메소드를 
서브 클래스(자식 클래스) 에서 서브클래스만의 방식으로  display 를 호출하고 싶을 때 오버라이딩이라고 한다
오버라이딩을 할 경우 현재 가장 가까운 클래스인 자식 클래스 display 메소드만 남기고
수퍼클래스에서의 display메소드는 본의아니게 가려지는 현상

▶ 10월 13일 모르는 내용 정리

1. 자바에서 상속은 단일상속만 가능하도록...되어있다..
   서브한개 수퍼 한개 

   다중상속 : 서브 한개 , 수퍼 여러개 → 불가능
   오늘 배운 내용은 수퍼 한개에 서브가 여러개임(다중상속이라고 볼수 없고 단일상속으로 봐야함)

2. 서브클래스 내의 변수는 일시적으로 접근이 불가능하다.
   서브클래스 내 변수가 여러개면 부모 클래스에서 관리하기 어려움
   시스템적으로 제한하기 위해 서브클래스 내 변수는 일시적으로 막아둠
   따라서 , 강등을 해야 서브클래스 내 변수가 보이게끔 구현되어있음

3. 오버라이딩 기준
  	 	수퍼클래스 	서브클래스   	내용 
오버라이딩	X		O		Object.toString 문자열 정보가 출력
		O		O		서브클래스에 있는 메소드를 우선 출력    


※ Alt + 방향키 : 줄 이동 

1.
- Main : EmpSalary
- sub : Employee
- super : Salary

연봉과 부서명 출력 문제 풀기

생성자는 객체가 만들어질때 1번만 만들어지기 때문에

1번만 슈퍼클래스로 데이터를 넘기려면 생성자 호출방법 
여러번 넘기려면 public ~set 방법



- Main : EmpSalary
- sub : Employee
- super : Salary

2. object 클래스 (최상위 클래스) 
	자바의 클래스 계층도에서 최상위에 있는 클래스
  	
※ 사용자들의 원할한 코딩을 위하여 미리 구현한 메소드들이 있습니다.
	hashCode() : 객체 식별을 위하여 만들어 놓은 고유한 정수 값을 의미한다.
		   (임의로 숫자를 부여하고 그대신 객체마다 코드는 다르다.)
	getClass() : 패키지 경로 + 클래스 이름 
		   (getter 와 비슷한 의미 , 값을 끌고옴)
         ★ toString() : 객체에 대한 정보를 문자열로 출력해준다.
		   getClass() + "@" + hashCode()의 16진수 값 

   	 객체 이름을 출력한다는 것은 암시적으로 toString() 메소드를 호출하는 것 이다.
  		 ex) System.out.println(hong.toString());
    	 	     System.out.println(hong);
     	    	  → 출력값 동일
          	  toString() 메소드는 개발자가 필요에 의해서 많이 오버라이딩한다.



3. 레퍼런스 형변환

- 기본 자료형 예시 : CastTest 클래스

부모입장에서 자식들 관리를 편리하게 하기 위해 형변환


RefCasting 클래스의 하위 개념으로 Book 클래스와 Sawon 클래스가 있다고 가정한다.
Book(책_서브)
Sawon(사원_서브)
RefCasting(수퍼)
RefMain 메인 클래스

       1)instaneof 연산자
	특정 객체가 어떠한 클래스로 생성된 것인지를 확인하기 위한 연산자이다.
	연산 결과의 반환 타입은 true 또는  false 이다.
	따라서, if 구문에 사용될 수 있다.
	
	ex) obj instanceof Book
	     : 객체 obj는 Book 클래스로 만들어진 인스터스(=객체) 입니까?

      2)강등(DownCasting)
        ★반드시 명시적 형변환을 사용해야 한다
        서브클래스 이름 객체이름 = (서브클래스이름) 수퍼 클래스로 생성된 객체 ;
         ex) Book mybook = (Book) obj ; 

      3)승급(UpCasting)
        암시적 형변환이 이루어진다.
        수퍼클래스이름 객체이름 = new 서브클래스에 대한 생성자();

       4)레퍼런스 형변환 사용처
	컬렉션 처리시 사용된다.
	파일 입출력에 사용된다.
	웹 프로그래밍(jsp) : 회원 가입 , 정보 수정 등등
    	스마트 폰 개발(안드로이드에는 버튼, 체크박스등을 object 처리 후 형 변환)

[오후 수업]


-main : Mysuper
-sub : Mysub
-super : RefTest

4. 승급 시 변수와 메소드의 접근범위
---------------------------------------------------------------------------------------------------------------------------
항목	 	수퍼 		서브 		설명
---------------------------------------------------------------------------------------------------------------------------
변수 		접근 가능		접근 불가능	수퍼클래스 내의 변수에만 접근이 가능하다
						서브클래스 내의 변수는 일시적으로 접근이 불가능하다.
						강등이 이루어 지면 접근이 가능하다

메소드 		있음		없음		어떤 메소드가 수퍼에만 존재하는 경우
						상속을 받고 있으므로, 수퍼 클래스의 메소드가 실행이 된다.

메소드		없음		있음		강등을 통해서만 접근이 가능하다.

오버라이딩 	있음		있음		서브 클래스의 메소드가 우선적으로 실행 된다.		
						수퍼 클래스의 메소드는 본의 아니게 숨겨 지는데 , 이것을 
						메소드 은닉화 현상이라고 한다.
						수퍼의 메소드는 super.메소드이름()으로 명시적 호출 할 수 있다.

5. main : Ref01
   서브 : Dog
   서브 : Cat
   수퍼 : Animal

	  toString()   →	 항목	 	수퍼 		서브	
   Object    O		 메소드 		있음		없음
   Animal    X
   Dog       X




