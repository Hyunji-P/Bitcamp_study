[오전 수업]
*  교안 (48 ~ 68) 

비지니스 로직 : 데이터를 처리하는 곳
프리젠테이션 로직 : 보여주는 파트 

MVC 패턴
B J S 

Model : bean + dao 
View : jsp 
Controller : 서블릿 


59쪽 
같은 패턴의 코딩을 계속하므로 재사용성이 높은 프로그램을 만들어야한다. 

61쪽 
디자인 패턴 : 개발에서 필요한 여러가지 패턴 ( ex . todolist(커맨드들의 집합 = 커맨드 패턴) 도 디자인패턴의 일종)

63쪽

데이터 베이스 접근 : jdbc 사용 
스프링에서 데이터 베이스 접근 : 마이바티스 
스프링에서 유효성 검사 : 하이버네이트 

-----------------------------------------------------------------------------------------
* 이클립스 설치 방법 
	1) http://www.eclipse/org/ 
	2) 다운로드 
	3) enterprise  2번째 설치 
	4) installation folder :  바탕화면 
                  workspace : 바탕화면 
	5) utf-8 인코딩 방식 지정(jsp 교안 참고) 
	

* 스프링 실습
	1) Maven(메이븐) 프로젝트를 이용하는 방법 
		(교안 1쪽 ~ 16쪽)
	2) STS 툴을 사용하는 방법 
		(교안 17쪽 ~ 32쪽)
	3) 이클립스에 STS Plug-In을 첨가하여 사용하는 방법 
		(교안 33쪽 ~ 47쪽)

	+ 2) , 3) 은 내부적으로 Maven 프로젝트로 구성되어있다.
	   3) 방식으로 주로 사용 할 것임

--------------------------------------------------------------------------------------------
* 1) Maven(메이븐) 프로젝트를 이용하는 방법 (교안 1쪽 ~ 16쪽)

교안 1쪽

메이븐 : 빌드를 위한 툴 
스프링은 Maven , Gradle 을 이용하여 빌드

참고 
교안 4쪽 
교안 5쪽

교안 6쪽 
모든 라이브러리를 중앙저장소에 가지고 있고 중앙저장소에서 필요한것만 로컬저장소로 복사

교안 7쪽 , 교안 8쪽 
오라클 데이터 베이스를 사용하려면 ojdbc6.jar  파일이 필요했다.  --> lib 폴더에 넣음 


중앙저장소에 있는 org.springframework.spring-context.5.0.2.RELEASE.jar 다운로드 받고 
pom.xml 에 어떤 파일을 받을 지 명시만 해두면 됨 

	1) https://repo1.maven.org/maven2 중앙저장소가 있는 사이트 접속 
		jar 파일을 모두 넣어 놓음 
	2) org/springframework/spring-context/5.0.2.RELEASE 경로 접속  
	3) 파일 다운로드 
교안 9쪽 
	=> 필요한 라이브러리를 pom.xml 파일에 기록해두면 중앙 저장소에서 로컬 저장소로 파일을 다운로드 한다.
	<dependency> 태그 1개가 라이브러리 파일(확장자 jar) 한 개
 	member 프로젝트 > pom.xml 입력 
	입력 후 저장 하면 하단 다운로드가 진행됨 
	
교안 6쪽 
	내 컴퓨터 [사용자홈]/.m2/repository/groupId/artifactId/version 에서 라이브러리가 다운로드 되었는 지 확인 
---------------------------------------------------------------------------------------------
교안 10쪽 ~ 13쪽 따라하기 

교안 12쪽 
Artifact id : 프로젝트 이름 

---------------------------------------------------------------------------------------------

* 3) 이클립스에 STS Plug-In을 첨가하여 사용하는 방법 (교안 33쪽 ~ 47쪽)
- 33쪽 , 34 쪽 따라하기 

- 37쪽 ~ 40쪽 
- 이클립스 
	ctrl + n > spring boot

---------------------------------------------------------------------------------------------

Spring DI (의존 주입)

Spring AOP(관점 지향 프로그래밍)

Spring MyBatis(with DataBase)

Spring MVC(with Web) 

ProjectDI.zip
	DI 관련 풀 소스 
	교안 69쪽 ~ 125쪽 

---------------------------------------------------------------------------------------------
69쪽 
	https://docs.spring.io/spring-framework/docs/4.0.x/javadoc-api/ --> 사이트 즐겨찾기 

이클립스 (70쪽) 
	coupling 패키지 생성 , Baseball , Football , Human , MainTest  자바 파일 생성 
	
	Baseball  업무 로직이 바껴서 수정이 되어야 하면 Human클래스가 바뀌어져야한다. 

71쪽 
	강한 결합으로 코딩을 하면 유지보수 하는데 어려움 

72쪽 
	강한 결합 ---> 약한 결합 (인터페이스 상속) ---> 약한 결합에서 수정 할 곳은 MainTest 만 수정하면 됨 

73쪽 
	Dependency(의존) 
		선생님 학생 : 처음엔 강한 의존 관계 
		선생님 학생 : 나중엔 약한 의존 관계
	Injection (주입)
		: 어떠한 데이터를 외부에서 넣어주는 기법 
		생성자 주입 , setter 주입 방식 

	스프링은 DI 기법을 자동으로 만들어 줄 수 있는 프레임 워크 중의 하나이다. 
	개발자는 스프링 설정을 해줘야 한다. 
		설정 : 1) xml 파일 , 2)Annotation을 이용하는 방법이 있다. 
		xml 파일의 용량이 커지다 보니 , 줄일 의도로 Annotation 방식을 선호한다.

76쪽 , 77쪽
	제어의 역행(Inverse Of Control)이란 코드 호출의 주도권을 프레임워크이 가지는 방식

---------------------------------------------------------------------------------------------
 
[오후 수업]
78쪽 
	mycomputer 패키지 생성 , Computer01 , MainProgram01 , Programmer01 자바파일 생성

79쪽 
	프로그래머가 객체를 바로 생성 : 강한 결합을 의미 


81쪽 
	MainProgram02 , Programmer02 , Computer02 , OfficeWorker02


83쪽 
	객체들간의 의존관계를 가지고 주입 ==> DI

	Computer, Programmer , MainProgram 자바파일 생성


85쪽 
	스프링 : <constructor-arg> 태그 이부분은 제외 (잘못 만듬)
	

	ComputerMain 클래스 생성 + computer.xml 파일 생성 
		ProjectDI 풀 소스에서 xml 파일의 내용을 복사합니다. 

	* 스프링 설정 파일 (computer.xml) 
		스프링과 관련 여러 가지 설정 정보를 저장하고 있는 텍스트 파일이다. 
		xml 파일 형식이고, 이름은 개발자가 임의로 지정할 수 있다. 

	★xml 과 관련하여 차후에 공부해야 할 것 
	   dtd , 스키마(xsd)
	   기본 xml 문법을 준수하면서 , 동시에 내가 지켜야 할 규칙을 다시 정의하는 기법 

87쪽 참고 
computer.xml 
	*객체 지정 방법 
	<bean id="객체명" class="클래스 전체 경로">
	</bean>

	자바에서 Computer computer = new Computer(); 을 의미함 

	* 변수  setter 셋팅 방법 
	<property name="변수명">
		<value>변수값</value>
	</property>

	자바에서 computer.setCpu("인텔 시피유");

---------------------------------------------------------------------------------------------
98쪽 
	 shape.circle 패키지 , ShapeMain , Point 클래스 생성 
	MainShape 클래스 생성 --> 스프링으로 풀어보기 

---------------------------------------------------------------------------------------------
* 정리 
1) java 파일에서 객체 먼저 확인 
2)xml 파일에서 객체 먼저 만들기 
3)생성자 주입 ,  setter 주입 방식으로 추가 코딩 

