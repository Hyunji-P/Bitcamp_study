[오전 수업]

-- 9시 30분 ~ 10시 20분 
* 교안 332쪽(ProjectMybatis) 

1. web.xml 에서 member section 
2. member-context.xml
3. register.jsp 파일 만들기 
4. 커맨드 객체(Bean 클래스) 생성 --> model.Member.java + DB 테이블 
5. controller 폴더 > 클래스 생성 
	GET 방식 --> 경로 설정 
	POST 방식 
6. /WEB-INF/member/meRegisterForm.jsp --> jsp 파일 만들기 

==================================================
회원가입하기

web.xml
	1. member 섹션 서블릿맵핑 하기
	확장자 me, Dis가 관여, context파일은 mvc
	2. member-context 파일 없으니까 생성


member-context
	1. value="/WEB-INF/member/ 로 수정


p.331
출발지) 최초 시작 파일 만들기
	web-inf > register.jsp 파일 생성
	"/register.me" 커멘드
	***표 만들기 : 기능(로그인) - 커멘드(ex. login.me)


커멘드 객체 클래스 생성(데이터 처리를 위함)
	model > member.java
	커멘드 객체
	회원가입 화면대로 테이블과 컬럼 생성
	***agreement boolean


컨트롤러 생성
	controller > RegisterController.java
	@Controller 어노테이션 
	@RequestMapping - GET방식 먼저 작성, 
	POST방식 작성
	중복되는 "/register.me" 을 final 변수 생성하여 바꾸기
	return "meRegisterForm" -> meRegisterForm 파일 만들기


도착지) meRegisterForm 파일 생성
	web-inf > member > meRegisterForm 생성
	테스트) "meRegisterForm입니다." 테스트 문구 작성 후 최초 파일인 register.me 실행

	
===========================================================

좋아하는 야구팀 양식 만들기
Baseball.java 생성
	model > Baseball.java
	변수(팀명, 마스코트) 생성


RegisterController.java
	***실행되는 순서 : @ModelAttribute가 @RequestMapping보다 먼저 실행됨
	
좋아하는 야구팀
	@ModelAttribute, List<Baseball> sportsTeamList() 생성
	lists.add(new Baseball("삼성 라이온즈", "lions"));
	***List컬렉션 공부하기
	
선호하는 운영체제
	@ModelAttribute("favorites"), String[] osArray() 생성

직업
	@ModelAttribute("joblists"), List<String> job_list() 생성

개발툴
	@ModelAttribute("tools"), public List<Tool> tool_list() 생성
	model > Tool.java 클래스 생성


Tool.java
	변수 생성


RegisterController.java
	tool_list()에 원소 추가하기 - lists.add(new Tool("netbeans", "넷빈즈"));


================================================

p.340
양식 만들기
meRegisterForm.jsp
	***jsp파일 생성 시 체크리스트 만들어보기
	taglib 태그 생성
	c:set 태그 생성
	form:form 태그에서는 표현식이 안되기 때문에 el방식으로 적어줘야 함 -> ${apppath}
	form:form태그에서는 커멘드이름 꼭 필요 -> commandName="", modelAttribute=""
	***modelAttribute가 최신 버전에서 사용되긴 하나 둘다 기재하는 것이 기본적인 와꾸(?)


meRegisterForm.jsp 
	<table> 작성
	member.java의 변수와 form태그의 path값을 일치하게 작성 -> <form:input path="password" />
	에러메세지 err과 err의 스타일 지정


RegisterController.java
	POST방식
	메소드handle()에 한시적으로 지정했던 매개변수 String str를 지우고 ModelAndView, Member xxx 로 수정
	-> protected ModelAndView handle의 매개변수를 아래와 같이 수정, 3개의 어노테이션 추가
	(@ModelAttribute("member") @Valid Member xxx, BindingResult errors) 
	@ModelAttribute("member") 작성, "member"는 meRegisterForm.jsp의 commandName과 일치해야 함


Member.java
	유효성
	@NotEmpty(message = "이름은(는)" + MUST_INPUT)
	

RegisterController.java
	protected ModelAndView handle 작성 > ModelAndView mav 생성, if구문 작성
	final변수  startPage = "/meRegisterForm"; gotoPage = "/meRegisterProc";로 작성


테스트


====================================================

Member.java
	어노테이션을 활용해서 각 변수마다 메세지 작성	
	변수 Agreement는 메소드에 어노테이션 @AssertTrue를 작성
		-> @AssertTrue(message="메세지 약관에 동의하셔야 합니다.")
			public boolean isAgreement()
	Bean클래스 완성 후 jsp 파일 생성하기
	***Bean Validation 교안에서 더 공부하기


meRegisterForm.jsp
	추가 <form:hidden path="mpoint" value="10" />
	나머지 주소, 이메일 .. 등등 완성하기

좋아하는 야구팀
	콤보박스 - select태그
	options태그 - items에는 el태그로 작성, el태그는 controller의 어노테이션과 같은 이름이어야 함
	ex. 컨트롤러의 @ModelAttribute("sportTeams") 와 jsp의 <form:options items="${sportsTeams}" 일치

선호하는 운영체제
	체크박스-checkboxes태그 > form:checkboxes path="favorites" items="${favorites}"

직업
	jstl
	select태그 > c:forEach > c:if > option

개발툴
	radiobuttons
	items, itemLabel, itemValue 등 추가

기타
	textarea태그 추가, cols=20, rows=3 추가
	멀티라인 - input이 아닌 textarea로 작성, 열높이가 20, 높이가 3

약관동의
	checkbox태그 추가, label추가


====================================================


오전 수업 요약

회원가입하기
web.xml() 서블릿 맵핑
MVC설정파일
	member-context.xml
	뷰 리졸버 설정) member폴더
시작파일) register.jsp
빈클래스) Member.java
	Bean Validation
Baseball클래스
Tool클래스
컨트롤러) RegisterController
	폼에 들어갈 체크박스, 라디오 버튼, 콤보박스에 넣을 데이터 지정
도착파일) meRegisterForm.jsp
종착지파일) meRegisterProc.jsp



====================================================





[오후 수업]
p.342쪽 

CRUD : Create Relation Update Delete 


p.343쪽 

1. 테이블 생성 
2. 347쪽 pom.xml 패치 버전을 5.0.2 버전으로 변경 
   우측 코드(4개) 예시 명시 --> 오라클과 마이바티스 가능하게 지원해주는 라이브러리 

  - 중앙저장소에서 다운로드를 잘 안받아지는 경우가 발생함 
     11.2.0.3 파일 압축 해제 후 해당 경로에 붙여넣기 
 3. web.xml 코딩 

 4. 350쪽 
applicationContext.xml 에 코딩

5. 351쪽 코딩

최종 목적은 sqlSessionTemplate 을 구하는게 목적이며 dao 에서 사용된다. 

6. album-context.xml 파일 코딩 

7. 353쪽 
    applicationContext.xml 에서
   <property name="configLocation" value="classpath:/album/mybatis/SqlMapConfig.xml"/>
   경로를 지정했음 해당 xml 파일 생성  

   SqlMapConfig.xml 에서 353쪽 내용 코딩 

8. Album클래스 생성 (357쪽) 

9. mapalbum.xml 코딩 (354쪽) 

10. dao 패키지 > AlbumDao(358쪽) 

11. album.jsp 파일 생성

12. AlbumListController 생성 


