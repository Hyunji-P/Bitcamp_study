[오전 수업]
7. 66쪽
    1) Product2 클래스 생성(변수정의 , getter , setter , 생성자)
    2) MyDao 클래스 -> GetList() 메소드 구현 -> 여러건을 다뤄야하기때문에 컬렉션
    3) productList.jsp 생성 
    4) useBean 생성 
    5) GetList() 메소드 호출 
    6) 세션 바인딩
    7) <body> 태그 코딩 
    
8. 91쪽
   fnFunctionExam.jsp
   
------------------------------------------------------------------------------------------------
※ 포트 번호가 안맞는다고 하면 중간에 튕겨버려서 그럼(잠금 걸어버림)
   servers 에서 포트번호를 임시로 바꿔버리고 다시 재부팅 하기 
   아니면 , 강제종료하는 방법도 있음 

서블릿 : 166 ~ 193쪽
web.xml 파일 : 31쪽
서블릿 맵핑 : 172 , 173쪽
서블릿 구현 절차 : 183~185쪽
페이지 이동하기 : 126쪽

입력 양식(서블릿) : 186쪽


*MVC&프레임워크 . PDF

*순서
1. 2쪽
   프로그래밍에서 데이터 처리를 하는 부분을 model이라고 함(dao,bean)
   boList 처럼 보여주는 부분을 view 라고 함 

2. 5쪽
    controller = 서블릿 
    7쪽 , 6쪽 
    model1방식 : 쉽고 , 간단 
    유지 보수 하기가 어렵고, 이해하기 어렵습니다.
    html 과 자바 공간이 같이 있기때문에 동시에 한 파일에 두사람이 접근할 수 없음 

3. 8쪽
   9쪽
   ex) 서비스센터 -> 접수를 받음 -> 기사 1, 기사2한테 넘겨줌
   10쪽
   11쪽
   12쪽
   간단하게 정리

4. 166쪽
    서블릿 
    서블릿을 핸들링 할 줄 알아야 스프링을 할 수 있음 
    172쪽
     파일 생성 -> 이름 정하고 -> NEXT -> 체크박스 체크 -> FINISH
     web.xml 파일 -> myweb.WEB-INF에 붙여넣기 

5. 31쪽 
   web.xml 파일이 커지다 보니까 요즘에는 잘 사용하지 않지만 그래도 사용하긴 함 
   서블릿 맵핑을 할때는 web.xml에 기록을 함 

6. 174쪽
   서블릿은 주소를 오픈하지 않고 숨김 
   일종의 트릿을 사용하는데 그 중 하나가 서블릿 맵핑이다 
   
   186쪽
   보안때문에 hohoho라는 가짜 주소를 만들고 hohoho로 지정하면
   mypkg.FormServlet 클래스로 이동함 
   1) inputForm.jsp  , destination.jsp생성
   2) inputForm.jsp 코딩 
      전송 -> http://localhost:8989/MyWeb/hohoho
      애플리케이션 이름이 request.getContextPath()으로 구할 수 있음 
      hohoho는 가짜 주소임 ! 
   3) web.xml 코딩 
      서블릿과 서블릿 매핑 태그는 서로 매칭되고 , 가짜주소 hohoho를 가지고
      동일 서블릿 이름의 진짜 주소를 찾아간다.(=매핑)
   4) mypkg.FormServlet 클래스 생성
   5) 184쪽
      서블릿 역할을 하려면 HttpServlet 상속을 받아야함 
      post방식이므로 doPost() 메소드 오버라이딩한다. 
       req : request, resp : response 익숙한 이름으로 변경 
       
      서블릿 매핑 = url pattern 
      추상적인 내용을 구체적으로 풀어나가는 것을 매핑이라고 함 
      
      request 스코프에 바인딩 작업 
      포워딩 방식으로 destination.jsp으로 넘어감 
7. 126쪽
    세션은 브라우저가 살아있는 한 계속 살아있음 
    데이터는 request 에 넣음 

    포워딩 방식 : request영역에 여러 파라미터가 들어가 있음 
    dispatcher.include(request, response); 116쪽
       

8. 187쪽
    1) Caller.jsp
       <form 태그> 코딩
    2) web.xml 코딩
       주소지정
       init-param 초기화 파라미터 
       정적이고 데이터가 바뀔 일이 없는 경우 사용    
    3) 168쪽 
        소스코드를 바꿨을 때 (다시 컴파일) : destory()    
    4) CallerServlet 에 코딩
       init , service , doPost , doGet , destroy 오버라이딩 
       출력값 예측해보기 
    5) Callee.jsp 에 최종 결과물을 보여주기 위해 바인딩 
       doPost메소드에 바인딩 할것 (왜? 바인딩 한 결과를 최종 결과물을 보여주는 Calle.jsp파일로 보내줘야하기때문에)
       초기화 파라미터와 파라미터 request에 바인딩 
    6) Callee.jsp에 코딩 
       
9. 188쪽	풀어보기
    	

10. 189쪽  
     가수와 그룹 
     web.xml의 사이즈가 점점 커짐 -> 여기다가 코딩안하고 따로 바깥으로 뺌
     프로젝트 > 우클릭 > new > 서블릿 
     next > url mappings : 서블릿 매핑 , 위에가 초기화 파마리터 > next > 오버라이딩 할거 정함 > finish
     Annotation : 오버라이딩 


11. 172쪽
     서블릿 매핑 