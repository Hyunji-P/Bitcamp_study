/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2020-12-24 01:06:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chap05_jquery;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sample07_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<script src=\"./../js/jquery.min.js\"></script>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>엘리먼트의 어트리뷰트 값 제거하기</title>\r\n");
      out.write("\t<style>\r\n");
      out.write("\t\tp {   margin: 4px;  font-size: 20px;  font-weight: bolder; cursor: pointer;}\r\n");
      out.write("\t\t.red {   color: red;}\r\n");
      out.write("\t\t.under {   text-decoration: underline;}\r\n");
      out.write("\t\t.highlight {   background: yellow;}\r\n");
      out.write("\t\t.blue {\r\n");
      out.write("\t\t\tcolor: blue;\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t</style>\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t$('button#add').click(function(){\r\n");
      out.write("\t\t\t\t$('#img0').attr('src','./../images/car0.jpg');\r\n");
      out.write("\t\t\t\t$('#img0').attr('width','100');\r\n");
      out.write("\t\t\t\t$('#img0').attr('height','100');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$('#gogo').attr('href', 'http://www.naver.com');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('button#remove').click(function(){\r\n");
      out.write("\t\t\t\t$('#img0').attr('src','');//src 속성을 없앰 \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('p').addClass('red under');//두가지 속성 지정\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#removeClass').click(function(){\r\n");
      out.write("\t\t\t\t$('p:even').removeClass('red under');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#changeClass').click(function(){\r\n");
      out.write("\t\t\t\t$('p:odd').removeClass('red under').addClass('highlight');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>   \r\n");
      out.write("\t<h2>버튼을 클릭해 보세요.</h2>\r\n");
      out.write("\t<button id=\"add\">add Attribute</button> \r\n");
      out.write("\t<button id=\"remove\">remove Attribute</button>\r\n");
      out.write("\t\r\n");
      out.write("\t<a id=\"gogo\">\r\n");
      out.write("\t\t<img id=\"img0\"  title=\"똘이군\" alt=\"puppy picture\"><!-- 그림이 없으면 대체 이미지 : alt -->\r\n");
      out.write("\t</a>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<button id=\"removeClass\">removeClass</button>\r\n");
      out.write("\t<button id=\"changeClass\">changeClass</button>\r\n");
      out.write("\t\r\n");
      out.write("\t<p>엘리먼트로부터</p>\r\n");
      out.write("\t<p>클래스를</p>\r\n");
      out.write("\t<p>추가하고</p>\r\n");
      out.write("\t<p>제거하는</p>\r\n");
      out.write("\t<p>연습하기</p>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
